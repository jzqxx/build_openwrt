#!/bin/sh /etc/rc.common

START=99
USE_PROCD=1

PROG="/usr/bin/sing-box"

start_service() {
    config_load sing-box

    local enabled
    config_get_bool enabled "main" "enabled" 0
    [ "$enabled" = "1" ] || return 0

    local conffile workdir remote url auto_restart restart_cron
    config_get conffile "main" "conffile"
    config_get workdir "main" "workdir" "/etc/sing-box"
    config_get_bool remote "subscription" "remote" 1
    config_get url "subscription" "url"
    config_get_bool auto_restart "subscription" "auto_restart"
    config_get restart_cron "subscription" "restart_cron" "0 5 * * *"

    local level output external_controller_port external_ui secret default_mode tproxy_port
    config_get level "log" "level" "warn"
    config_get output "log" "output" "/var/log/sing-box.log"
    config_get external_controller_port "experimental" "external_controller_port" "9900"
    config_get external_ui "experimental" "external_ui" "ui"
    config_get secret "experimental" "secret" "jzqxx"
    config_get default_mode "experimental" "default_mode" "rule"
    config_get tproxy_port "inbounds" "tproxy_port" "10105"

    local log experimental inbounds
    log="{\"disabled\":false,\"level\":\"$level\",\"output\":\"$output\",\"timestamp\":true}"
    experimental="{\"clash_api\":{\"external_controller\":\"0.0.0.0:$external_controller_port\",\"external_ui\":\"$external_ui\",\"secret\":\"$secret\",\"external_ui_download_url\":\"https://gh-proxy.com/https://github.com/MetaCubeX/metacubexd/archive/gh-pages.zip\",\"external_ui_download_detour\":\"direct\",\"default_mode\":\"$default_mode\"},\"cache_file\":{\"enabled\":true,\"store_fakeip\":false}}"
    inbounds="[{\"type\":\"tproxy\",\"tag\":\"tproxy-in\",\"listen\":\"::\",\"listen_port\":$tproxy_port,\"sniff\":true,\"sniff_override_destination\":false},{\"type\":\"mixed\",\"listen\":\"::\",\"listen_port\":2080,\"sniff\":true}]"

    local profile_file
    if [ "$remote" = "1" ] && [ -n "$url" ]; then
        if (curl -s -f -A sing-box --connect-timeout 15 --retry 3 -L -X GET -o $workdir/config.tmp $url); then
            mv $workdir/config.tmp $workdir/subscription.json
        else
            [ -f "$workdir/config.tmp" ] && rm -f $workdir/config.tmp
        fi
        profile_file="$workdir/subscription.json"
    elif [ - f "$workdir/sing-box.json" ]; then
        profile_file="$workdir/sing-box.json"
    else
        return 0
    fi

    jq --argjson log $log --argjson experimental $experimental --argjson inbounds $inbounds '.log=$log | .experimental=$experimental | .inbounds=$inbounds' $profile_file > $workdir/config.tmp
    
    local mixin mixfile
    config_get mixin "mix" "mixin" 0
    config_get mixfile "mix" "mixfile"
    if [ "$mixin" = "1" ] && [ -f "$mixfile" ]; then
        jq -s add $workdir/config.tmp $mixfile > $conffile && rm -f $workdir/config.tmp
    else
        mv $workdir/config.tmp $conffile
    fi

    procd_open_instance sing-box
    procd_set_param command $PROG run -c $conffile -D $workdir

    procd_set_param user root
    procd_set_param file $conffile
    procd_set_param limits core="unlimited"
    procd_set_param limits nofile="1000000 1000000"
    procd_set_param stdout 1
    procd_set_param stderr 1
    procd_set_param respawn

    procd_close_instance

    ip rule add fwmark 1 table 100
    ip route add local 0.0.0.0/0 dev lo table 100

    local lan_device lan_subnet
    lan_device=$(uci -q get network.lan.device)
    lan_subnet=$(ip a | grep inet | grep "$lan_device" | awk '{print $2}' | sed 's,[^.]*/,0/,')
    nft -f $workdir/nftables.rules -D LAN_SUBNET="$lan_subnet" -D TPROXY_PORT="$tproxy_port"

    local bridge_nf_call_iptables; bridge_nf_call_iptables=$(sysctl -e -n net.bridge.bridge-nf-call-iptables)
    if [ "$bridge_nf_call_iptables" = "1" ]; then
        touch $workdir/br_netfilter.flag
        sysctl -q -w net.bridge.bridge-nf-call-iptables=0
    fi

    if [ "$auto_restart" = "1" ]; then
        sed -i '/sing-box/d' /etc/crontabs/root 2>/dev/null
        echo -e "$restart_cron /etc/init.d/sing-box restart" >> /etc/crontabs/root
        /etc/init.d/cron restart
    fi
}

stop_service() {
    config_load sing-box

    local output workdir
    config_get workdir "main" "workdir" "/etc/sing-box"
    config_get output "log" "output"

    rm -f $output

    ip rule del fwmark 1 table 100
    ip route del local 0.0.0.0/0 dev lo table 100
    nft delete table inet sing-box

    if [ -f "$workdir/br_netfilter.flag" ]; then
        rm -f $workdir/br_netfilter.flag
        sysctl -q -w net.bridge.bridge-nf-call-iptables=1
    fi

    sed -i '/sing-box/d' /etc/crontabs/root 2>/dev/null
    /etc/init.d/cron restart
}
